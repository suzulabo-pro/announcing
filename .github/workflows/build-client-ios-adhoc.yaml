name: build-client-ios-adhoc

on: workflow_dispatch

jobs:
  build:
    runs-on: macOS-11

    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/workflows/build-setup
        with:
          SECRET_VALUES: ${{ secrets.SECRET_VALUES }}
        id: build_setup

      - uses: ./.github/workflows/build-setup/ios

      - uses: ./.github/workflows/provisioning-profile-setup
        with:
          APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD }}
          PP_PATH: 'secrets/Ad_Hoc.mobileprovision'

      - run: npm run - client.cap.build
      - run: npm run - client.cap.sync

      - run: >-
          xcodebuild 
          CODE_SIGN_STYLE=Manual
          CODE_SIGN_IDENTITY="Apple Distribution"
          BUNDLE_DISPLAY_NAME=${BUNDLE_DISPLAY_NAME}
          PROVISIONING_PROFILE_SPECIFIER="${PP_SPECIFIER}"
          BUNDLE_IDENTIFIER="${BUNDLE_IDENTIFIER}"
          BUNDLE_VERSION="${BUNDLE_VERSION}"
          BUNDLE_VERSION_STRING="${BUNDLE_VERSION_STRING}"
          -quiet
          -workspace App.xcworkspace
          -scheme App
          -archivePath $RUNNER_TEMP/announcing.xcarchive 
          archive
          &&
          xcodebuild
          -quiet
          -exportArchive
          -archivePath $RUNNER_TEMP/announcing.xcarchive
          -exportPath $RUNNER_TEMP/announcing.ipa
          -exportOptionsPlist ../../ios-export-adhoc.plist
        working-directory: ./capacitor/client/ios/App
        env:
          PP_SPECIFIER: 'announcing client Ad Hoc'
          BUNDLE_IDENTIFIER: 'app.announcing.client'
          BUNDLE_DISPLAY_NAME: ${{ secrets.IOS_ADHOC_NAME_PREFIX }}AH-Announcingâ™ª
          BUNDLE_VERSION: ${{ steps.build_setup.outputs.BUILD_NUMBER }}
          BUNDLE_VERSION_STRING: ${{ steps.build_setup.outputs.APP_VERSION }}

      - uses: actions/upload-artifact@v2
        with:
          name: announcing-adhoc-${{ steps.build_setup.outputs.BUILD_NUMBER }}-${{ steps.build_setup.outputs.APP_VERSION }}.ipa
          path: ${{ runner.temp }}/announcing.ipa

      - run: >-
          npm_config_yes=true npx firebase-tools
          appdistribution:distribute
          $RUNNER_TEMP/announcing.ipa/App.ipa
          --app ${APP_ID}
          --groups testers
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          APP_ID: ${{ secrets.FIREBASE_APP_ID_IOS }}

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/Ad_Hoc.mobileprovision
