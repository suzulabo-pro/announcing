plugins {
    id 'com.android.application'
    id 'com.github.triplet.play' version '3.5.0'
}

play {
    serviceAccountCredentials.set(file("../../play-console-account.json"))
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId System.getenv("APPLICATION_ID") ?: "app.announcing.client.dev"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode System.getenv("VERSION_CODE") as Integer ?: 1
        versionName System.getenv("VERSION_NAME") ?: "0.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }

        resValue "string", "app_label", System.getenv("APP_LABEL") ?: "L-Announcing♪"
        resValue "string", "title_activity_main", System.getenv("APP_LABEL") ?: "L-Announcing♪"
    }

    signingConfigs {
        release {
            storeFile file("../../upload-keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias "upload"
            keyPassword System.getenv("KEYSTORE_UPLOAD_KEY_PASSWORD")
        }
     }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.warn("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

def props = new Properties()
file("../../../../secrets/android.custom.properties").withInputStream { props.load(it) }

android {
    defaultConfig {
        manifestPlaceholders = [appLinkHostName:props.getProperty("appLinkHostName")]
    }
}
